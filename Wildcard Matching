class Solution(object):
    def isMatch(self, s, p):
         m, n = len(s), len(p)

         # Initialize the dp array
         dp = [[False] * (n + 1) for _ in range(m + 1)]
         dp[0][0] = True  # Empty pattern matches empty string

          # Fill in the first row
         for j in range(1, n + 1):
             if p[j - 1] == '*':
                 dp[0][j] = dp[0][j - 1]

         # Fill in the dp array using the recurrence relation
         for i in range(1, m + 1):
             for j in range(1, n + 1):
                 if p[j - 1] == s[i - 1] or p[j - 1] == '?':
                     dp[i][j] = dp[i - 1][j - 1]
                 elif p[j - 1] == '*':
                     dp[i][j] = dp[i - 1][j] or dp[i][j - 1]
         return dp[m][n] 
