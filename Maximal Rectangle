class Solution(object):
    def maximalRectangle(self, matrix):
        def largestRectangleArea(heights):
             stack = []
             max_area = 0

             for i in range(len(heights)):
                 while stack and heights[i] < heights[stack[-1]]:
                     height = heights[stack.pop()]
                     width = i if not stack else i - stack[-1] - 1
                     max_area = max(max_area, height * width)
                 stack.append(i)

             while stack:
                 height = heights[stack.pop()]
                 width = len(heights) if not stack else len(heights) - stack[-1] - 1
                 max_area = max(max_area, height * width)
             return max_area
        if not matrix or not matrix[0]:
             return 0
        rows, cols = len(matrix), len(matrix[0])
        heights = [0] * cols
        max_area = 0 

        for i in range(rows):
             for j in range(cols):
                 if matrix[i][j] == '1':
                     heights[j] = heights[j] + 1
                 else:
                     heights[j] = 0
             max_area = max(max_area, largestRectangleArea(heights))

        return max_area 
